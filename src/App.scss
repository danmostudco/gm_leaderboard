@import url('https://fonts.googleapis.com/css?family=Open+Sans|Raleway:800');
@mixin characterShadow {
  text-shadow: 4px 4px 8px rgba(0,0,0,0.4);
}

// App.scss
//
//
body {
    background: #0c141e -webkit-radial-gradient(35% 23%, ellipse farthest-side, #14222F, #0c141e);
    background-repeat:no-repeat;
    display: block;
    top: 0;
    left: 0;
    margin: 0;
}

@media (max-width: 768px) {
  .container {
    padding: 0 20px;
  }
}

@media (min-width: 769px) {
  .container {
    padding: 0 42px;
  }
}

.container {
    height: 100%;
    width: 100%;

    margin: 0 auto;
    position: relative;
    max-width: 1100px;
    min-height: 700px;
    color: #fff;
}

#footer {
    margin-top: 30px;
    min-height: 200px;
    background-color: #02070D;
}

.peopleList {
    margin-top: 18px;
}

h1 {
    font-family: 'open sans', sans-serif;
    font-size: 1.5em;
    color: #88A8C4;
    margin-bottom: 0px;
    margin-left: 10px;
    @include characterShadow;
}

.title {
    animation: fadeShift cubic-bezier(0.645, 0.045, 0.355, 1) 1; /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    animation-fill-mode: forwards; /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
    animation-duration:500ms;
}

// person.scss
//
//

.personRow {
  font-family: 'open sans', sans-serif;
  opacity:0;  /* make things invisible upon start */
  animation: fadeShift cubic-bezier(0.645, 0.045, 0.355, 1) 1; /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  animation-fill-mode: forwards; /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  animation-duration:500ms;
  margin-bottom: 3em;
  clear: both;
  min-width: 400px // for Andrew
}


// text styles about a person
.personText {
  display: inline-block;
  margin-top: 0.8em;
  margin-left: 1em;
}

.rowStats {
  font-size: 0.8em;
  @include characterShadow;
}

.personName {
  font-family: 'raleway', sans-serif;
  font-size: 1.8em;
  @include characterShadow;
}

.likesCount {
  font-family: 'raleway', sans-serif;
  font-size: 1.4em;
}

.postsCount {
  font-family: 'raleway', sans-serif;
  font-size: 1.4em;
}

.ratioStat {
  font-family: 'raleway', sans-serif;
  font-size: 1.4em;
}

// image styles about a person
.personImage {
  display: inline-block;
  float: left;
  // animate
  opacity:0;  /* make things invisible upon start */
  animation: popOut cubic-bezier(0.645, 0.045, 0.355, 1) 1; /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  animation-fill-mode: forwards; /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  animation-duration:500ms;
}

.personImage > img {
  border-radius: 50%;
  height: 80px;
  width: 80px;
  box-shadow: inset 1px 1px 0 rgba(255,255,255,0.1), 2px 2px 6px rgba(0,0,0,0.4);
}



// animate in each row
@keyframes fadeShift { from { opacity:0; transform: translateX(-4px) } to { opacity:1; transform: translateX(0px) } }

.personRow {
  @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
          animation-delay: 10 + (100ms * $i) 
      }
  }
}

// animate in face images
@keyframes popOut { from { opacity:0; transform: scale(0) } to { opacity:1; transform: scale(1) } }

.personRow {
  @for $i from 1 through 10 {
      &:nth-child(#{$i}) {
          &>.personImage {
              animation-delay: 170 + (100ms * $i) 
          }
      }
  }
}

// dateSelector.scss
//
//
.datePicker {
  margin-left: 10px;
}

.individualDate {
  font-family: 'open-sans', sans-serif;
  opacity:0;  /* make things invisible upon start */
  animation:fadeIn ease-in 1; /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  animation-fill-mode:forwards; /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  animation-duration:500ms;
  color: #788DA9;
  margin-right: 0.7em;
}

a {
  text-decoration: none;
  color: #788DA9;
}


// animate in styles
@keyframes fadeIn { from { opacity:0; transform: scale(1) } to { opacity:1; transform: scale(1)} }
.individualDate {
  @for $i from 1 through 5 {
      &:nth-child(#{$i}) {
          animation-delay: 50 + (70ms * $i) 
      }
  }
}
